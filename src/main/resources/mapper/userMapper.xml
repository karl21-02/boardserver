<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fastcampus.boardserver.mapper.UserProfileMapper">

    <select id="getUserProfile" resultType="com.fastcampus.boardserver.dto.UserDTO">
        SELECT id, user_id, password, nick_name, create_time, is_withdraw, status
        FROM user
        WHERE user_id = #{userId}
    </select>

    <resultMap id="UserResultMap" type="com.fastcampus.boardserver.dto.UserDTO">
        <id property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="password" column="password" />
        <result property="nickName" column="nick_name" />
        <result property="isAdmin" column="is_admin" />
        <result property="createTime" column="create_time" />
        <result property="isWithDraw" column="is_withdraw" />
        <result property="status" column="status" />
        <result property="updateTime" column="update_time" />
    </resultMap>

    <insert id="register" parameterType="com.fastcampus.boardserver.dto.UserDTO">
        INSERT INTO user (user_id, password, nick_name, is_admin, is_withdraw, status, create_time, update_time)
        VALUES (#{userId}, #{password}, #{nickName}, #{isAdmin}, #{isWithDraw}, #{status}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertUserProfile" parameterType="com.fastcampus.boardserver.dto.UserDTO">
        INSERT INTO user (user_id, password, nick_name, is_withdraw, status, is_admin)
        VALUES (#{userId}, #{password}, #{nickName}, #{isWithDraw}, #{status}, #{isAdmin})
    </insert>

    <select id="findByUserIdAndPassword" resultMap="UserResultMap">
        SELECT id,
               user_id,
               password,
               nick_name,
               is_admin,
               create_time,
               is_withdraw,
               status,
               update_time
        FROM user
        WHERE user_id = #{userId}
          AND password = #{password}
          AND status != 'DELETED'
    </select>

    <select id="idCheck" resultType="int">
        SELECT COUNT(id)
        FROM user
        WHERE user_id = #{userId}
    </select>

    <update id="updatePassword" parameterType="com.fastcampus.boardserver.dto.UserDTO">
        UPDATE user
        SET password = #{password}
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserProfile" parameterType="com.fastcampus.boardserver.dto.UserDTO">
        UPDATE user
        SET password=#{password},
            nick_name=#{nickName},
            is_withdraw=#{isWithDraw},
            status=#{status}
        WHERE id = #{id}
    </update>

    <delete id="deleteUserProfile" parameterType="String">
        DELETE
        FROM user
        WHERE user_id = #{id}
    </delete>

</mapper>
